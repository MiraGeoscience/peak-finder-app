name: static analysis

on:
  pull_request:
    branches:
      - develop
      - main
      - release/**
      - feature/**
      - hotfix/**
  push:
    branches:
      - develop
      - main
      - release/**
      - feature/**
      - hotfix/**

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  source_dir: peak_finder

jobs:
  pre-commit:
    name: pre-commit
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      SKIP: pylint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: capture modified files
        if: github.event_name == 'pull_request'
        run: >-
          git fetch --deepen=500 origin ${{github.base_ref}}
          && echo "FILES_PARAM=$(
          git diff --diff-filter=AM --name-only refs/remotes/origin/${{github.base_ref}}... -- | grep -E "^(${source_dir}|tests)/.*\.py$" | xargs
          )" >> $GITHUB_ENV
      - name: Run pre-commit on modified files
        if: github.event_name == 'pull_request' && env.FILES_PARAM
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage push --files ${{ env.FILES_PARAM }}
      - name: Run pre-commit on all files
        if: github.event_name == 'push'
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage push --all-files
  pylint:
    name: pylint
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    env:
      PYTHONUTF8: 1
      CONDA_LOCK_ENV_FILE: environments/conda-py-3.10-linux-64-dev.lock.yml
      PIP_EXTRA_INDEX_URL: https://test.pypi.org/simple/
    steps:
      - uses: actions/checkout@v4
      - name: Setup conda env
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ${{ env.CONDA_LOCK_ENV_FILE }}
          environment-name: linter_env
          cache-downloads: true
      - name: capture modified files
        if: github.event_name == 'pull_request'
        run: >-
          git fetch --deepen=500 origin ${{github.base_ref}}
          && echo "FILES_PARAM=$(
          git diff --diff-filter=AM --name-only refs/remotes/origin/${{github.base_ref}}... -- | grep -E "^(${source_dir}|tests)/.*\.py$" | xargs
          )" >> $GITHUB_ENV
      - name: Run pylint on modified files
        if: github.event_name == 'pull_request' && env.FILES_PARAM
        run: pylint $FILES_PARAM
      - name: Run pylint on all files
        if: github.event_name == 'push'
        run: pylint $source_dir tests
